{
    "openapi": "3.0.1",
    "info": {
      "version": "1.0.0",
      "title": "Swagger test",
      "description": "Showing off swagger-ui-express",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json", "multipart/form-data"],
    "servers": [{ "url": "http://wallet-project-group-1.herokuapp.com" }, { "url": "http://localhost:3001" }],
    "tags": [
      {
        "name": "UserAuthInfo",
        "description": "Authorization and info endpoints"
      },
      {
        "name": "Transactions",
        "description": "Transaction endpoints"
      },
      {
        "name": "Categories",
        "description": "Category endpoints"
      },
      {
        "name": "Developers",
        "description": "Developers endpoints"
      }
    ],
    "paths": {
      "/users/signup": {
        "post": {
          "tags": ["UserAuthInfo"],
          "summary": "User registration",
          "parameters": [],
          "requestBody": {
            "description": "Registration's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Not found",
              "content": {}
            },
            "409": {
              "description": "Email in use",
              "content": {}
            },
            "500": {
              "description": "Server error",
              "content": {}
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "tags": ["UserAuthInfo"],
          "summary": "User authentication",
           "parameters": [],
          "requestBody": {
            "description": "Authentication's object",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Email doesn't exist / Password is wrong",
              "content": {}
            },
            "404": {
              "description": "Not found",
              "content": {}
            },
            "500": {
              "description": "Server error",
              "content": {}
            }
          }
        }
      },
      "/users/logout": {
        "post": {
          "tags": ["UserAuthInfo"],
          "summary": "Logout",
          "security": [{ "Bearer": [] }],
          "parameters": [],
          "responses": {
            "204": {
              "description": "Successful operation",
              "content": {}
            },
            "404": {
              "description": "Not found",
              "content": {}
            },
            "500": {
              "description": "Server error",
              "content": {}
            }  
          }
        }
      },
      "/users/current": {
        "get": {
          "tags": ["UserAuthInfo"],
          "summary": "Get current user info",
          "parameters": [],
          "security": [{ "Bearer": [] }],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetUserInfo"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized (invalid access token)",
              "content": {}
            },
            "404": {
              "description": "Not found",
              "content": {}
            },
            "500": {
              "description": "Server error",
              "content": {}
            }
          }
       }
      },
      "/categoryes/":{
        "get": {
          "tags": ["Categories"],
          "summary": "Get list of categories",
          "parameters": [],
          "security": [{ "Bearer": [] }],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetAllCategories"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized (invalid access token)",
              "content": {}
            },
            "404": {
              "description": "Not found",
              "content": {}
            },
            "500": {
              "description": "Server error",
              "content": {}
            }}}
      },
      "/categoryes/add":{

      }
    },
    "components": {
      "schemas": {
        "RegistrationRequest": {
          "type": "object",
          "required": ["name", "email", "password"],
          "properties": {
            "name": {
                "type": "string",
                "description": "User's name",
                "format": "name"
              },

            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "RegistrationResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "User's token"
                  },
                "user":{
                  "type": "object",
                  "properties": {
                      "name": {
                        "type": "string",
                        "description": "User's name"
                      },
                        "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                      }     
                }
            }
        },
          "example": 
            { "token":"xxxxx.yyyyy.zzzzz",
                "user":{
                    "name": "One",
                    "email": "1@gmail.com"  
                    
                }}
        },
        "LoginRequest": {
          "required": ["email", "password"],
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "User's token"
                  },
                "user":{
                  "type": "object",
                  "properties":{
                      "name": {
                      "type": "string",
                      "description": "User's name"
                    },
                        "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "balance": {
                      "type": "number",
                      "description": "User's balance"
                }}}
            },
          "example": 
            { "token":"xxxxx.yyyyy.zzzzz",
                "user":{
                  "name": "One", 
                  "email": "1@gmail.com", 
                  "balance": "24000.05" 
                }} 
         },
         "GetUserInfo":{
          "type": "object",
          "properties": {
              "user":{
                "type": "object",
                "properties":{
                    "name": {
                      "type": "string",
                      "description": "User's name"
                    },
                    "email": {
                      "type": "string",
                      "description": "User's email",
                      "format": "email"
                    },
                    "balance": {
                      "type": "number",
                      "description": "User's balance"
                    }}}
                  },
              "example": 
              {"user":{
                  "name": "One", 
                  "email": "1@gmail.com", 
                  "balance": "24000.05" 
                }} 
         },
         "GetAllCategories":{
          "type": "array",
            "items": {
                "type": "object",
                "properties": {
            "category": {
              "type": "string",
              "description": "User's expense  category"
            },
          "ownerCategory": {
            "type": "string",
            "description": "The ID of the user owns category"
          }}
        },
        "example": [
          { "name": "category 1", "... ": "..." },
          { "ownerCategory": "...", "....": "..." }
        ]
      }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }